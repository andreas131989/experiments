# set TARGET_HOST to dns/ip of proxy
# set LOGSTASH_HOST to dns/ip of logstash host

proxy:
  container_name: proxy
  restart: always
  image: svscorp/adop-nginx:https-ldaps-custom-content
  #image: accenture/adop-nginx:0.3.1
  #build: ../images/docker-nginx/
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  ports:
    - "443:443"
  environment:
    - "constraint:tier==public"
    - "NGINX_PORT=${NGINX_PORT}"
    - "NGINX_SSL=${NGINX_SSL}"
    - "REDIRECT_PROTOCOL=${REDIRECT_PROTOCOL}"
    - "LDAP_PROTOCOL=${LDAP_PROTOCOL}"
    - "LDAP_SERVER=${LDAP_SERVER}"
    - "LDAP_USERNAME=${LDAP_ADMIN},${LDAP_FULL_DOMAIN}"
    - "LDAP_PASSWORD=${LDAP_PWD}"
    - "LDAP_USER_BASE_DN=${LDAP_USER_BASE_DN},${LDAP_FULL_DOMAIN}"
    - "LDAP_GROUP_ATTRIBUTE=member"
    - "LDAP_USER_ID_ATTRIBUTE=cn"
    - "LDAP_USER_OBJECT_CLASS=inetOrgPerson"
    - "CUSTOM_CONF=true"
    - "CUSTOM_HTML=true"
    - "http_proxy"
    - "https_proxy"
    - "no_proxy"

ldap:
  container_name: ldap
  restart: always
  #build: ../images/docker-ldap/
  image: accenture/adop-ldap:0.2.0
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  expose:
    - "389"
  ports:
    - "389:389/tcp"
  environment:
    INITIAL_ADMIN_USER: ${INITIAL_ADMIN_USER}
    INITIAL_ADMIN_PASSWORD: ${INITIAL_ADMIN_PASSWORD}
    JENKINS_PASSWORD: ${JENKINS_PWD}
    GERRIT_PASSWORD: ${GERRIT_PWD}
    SLAPD_PASSWORD: ${LDAP_PWD}
    SLAPD_DOMAIN: ${LDAP_DOMAIN}
    SLAPD_FULL_DOMAIN: ${LDAP_FULL_DOMAIN}

gerrit-mysql:
  container_name: gerrit-mysql
  restart: always
  image: mysql:5.6.25
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  expose:
    - "3306"
  environment:
    MYSQL_ROOT_PASSWORD: ${PASSWORD_SQL}
    MYSQL_USER: ${GERRIT_MYSQL_USER}
    MYSQL_PASSWORD: ${GERRIT_MYSQL_PASSWORD}
    MYSQL_DATABASE: ${GERRIT_MYSQL_DATABASE}

gerrit:
  container_name: gerrit
  restart: always
  #build: ../images/docker-gerrit/
  image: accenture/adop-gerrit:0.1.4
  privileged: true
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  expose:
    - "8080"
    - "29418"
  environment:
    - "dependency:container==gerrit-mysql"
    - "REPO_PATH=/var/git/repos"
    - "WEBURL=${PROTO}://${TARGET_HOST}/gerrit/"
    - "DATABASE_TYPE=mysql"
    - "DB_HOSTNAME=gerrit-mysql"
    - "DB_PORT=3306"
    - "DB_NAME=${GERRIT_MYSQL_DATABASE}"
    - "DB_USER=${GERRIT_MYSQL_USER}"
    - "DB_PASSWORD=${GERRIT_MYSQL_PASSWORD}"
    - "AUTH_LOGOUTURL=${PROTO}://${TARGET_HOST}/gerrit/"
    - "AUTH_TYPE=LDAP"
    - "GERRIT_PASSWORD=${PASSWORD_GERRIT}"
    - "JENKINS_PASSWORD=${PASSWORD_JENKINS}"
    - "INITIAL_ADMIN_USER=${INITIAL_ADMIN_USER}"
    - "INITIAL_ADMIN_PASSWORD=${INITIAL_ADMIN_PASSWORD_PLAIN}"
    - "LDAP_SERVER=${LDAP_SERVER}"
    - "LDAP_ACCOUNTBASE=${LDAP_FULL_DOMAIN}"
    - "LDAP_ACCOUNTPATTERN=${LDAP_ACCOUNTPATTERN}"
    - "LDAP_ACCOUNTFULLNAME=${LDAP_ACCOUNTFULLNAME}"
    - "LDAP_ACCOUNTEMAILADDRESS=mail"
    - "LDAP_USERNAME=${LDAP_ADMIN},${LDAP_FULL_DOMAIN}"
    - "LDAP_PASSWORD=${LDAP_PWD}"
    - "LDAP_GROUPBASE=${LDAP_GROUP_BASE_DN},${LDAP_FULL_DOMAIN}"
    - "LDAP_GROUPPATTERN=${LDAP_GROUPPATTERN}"
    - "LDAP_GROUPMEMBERPATTERN=${LDAP_GROUPMEMBERPATTERN}"
    - "HTTPD_LISTENURL=proxy-${PROTO}://0.0.0.0:8080/gerrit"
    - "USER_NAME=${GERRIT_USER_NAME}"
    - "USER_EMAIL=${GERRIT_USER_EMAIL}"
    - "JAVA_OPTIONS=-Dhttp.proxyHost=${HTTP_PROXY_HOST} -Dhttp.proxyPort=${HTTP_PROXY_PORT} -Dhttps.proxyHost=${HTTPS_PROXY_HOST} -Dhttps.proxyPort=${HTTPS_PROXY_PORT} -Dhttp.nonProxyHosts=\"${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}\""
    - "DOWNLOAD_SCHEME=http"
    - "http_proxy"
    - "https_proxy"
    - "no_proxy"

sensu-uchiwa:
  container_name: sensu-uchiwa
  restart: always
  image: sstarcher/uchiwa:0.15.0
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  environment:
    SENSU_HOSTNAME: sensu-api
    SENSU_DC_NAME: Sensu
    http_proxy:
    https_proxy:
    no_proxy:
  expose:
    - "3000"

sensu-api:
  container_name: sensu-api
  restart: always
  image: accenture/adop-sensu:0.2.0
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  command: api
  expose:
    - "4567"
  environment:
    TRANSPORT_NAME: rabbitmq
    RABBITMQ_HOST: sensu-rabbitmq
    REDIS_HOST: sensu-redis

sensu-server:
  container_name: sensu-server
  restart: always
  image: accenture/adop-sensu:0.2.0
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  command: server
  environment:
    API_HOST: sensu-api
    RABBITMQ_HOST: sensu-rabbitmq
    REDIS_HOST: sensu-redis
    TRANSPORT_NAME: rabbitmq

sensu-client:
  container_name: sensu-client
  restart: always
  image: accenture/adop-sensu:0.2.0
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  command: client
  environment:
    TRANSPORT_NAME: rabbitmq
    CLIENT_NAME: core
    CLIENT_ADDRESS: 127.0.0.1
    RABBITMQ_HOST: sensu-rabbitmq
    JENKINS_PREFIX: jenkins
    CLIENT_SUBSCRIPTIONS: "${SENSU_CLIENT_SUBSCRIPTIONS}"

sensu-rabbitmq:
  container_name: sensu-rabbitmq
  restart: always
  image: rabbitmq:3.5.7-management
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  expose:
    - "5672"
    - "5671"
    - "15672"
    - "15671"

sensu-redis:
  container_name: sensu-redis
  restart: always
  image: redis:3.0.7
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  expose:
    - "6379"

sonar-mysql:
  container_name: sonar-mysql
  restart: always
  image: mysql:5.6.25
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  expose:
    - "3306"
  environment:
    MYSQL_ROOT_PASSWORD: ${PASSWORD_SQL}
    MYSQL_USER: ${SONAR_MYSQL_USER}
    MYSQL_PASSWORD: ${SONAR_MYSQL_PASSWORD}
    MYSQL_DATABASE: ${SONAR_MYSQL_DATABASE}

sonar:
  container_name: sonar
  restart: always
  image: accenture/adop-sonar:0.3.5
  #build: ../images/docker-sonar/
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  expose:
    - "9000"
  environment:
    - "dependency:container==sonar-mysql"
    - "SONARQUBE_JDBC_USERNAME=${SONAR_MYSQL_USER}"
    - "SONARQUBE_JDBC_PASSWORD=${SONAR_MYSQL_PASSWORD}"
    - "SONARQUBE_SERVER_BASE=${PROTO}://${TARGET_HOST}/sonar"
    - "LDAP_URL=${LDAP_PROTOCOL}://${LDAP_SERVER}"
    - "LDAP_BIND_DN=${LDAP_ADMIN},${LDAP_FULL_DOMAIN}"
    - "LDAP_BIND_PASSWORD=${LDAP_PWD}"
    - "LDAP_USER_BASE_DN=${LDAP_USER_BASE_DN},${LDAP_FULL_DOMAIN}"
    - "LDAP_USER_REQUEST=(&(objectClass=inetOrgPerson)(uid={login}))"
    - "LDAP_USER_REAL_NAME_ATTRIBUTE=displayName"
    - "LDAP_USER_EMAIL_ATTRIBUTE=mail"
    - "LDAP_GROUP_BASE_DN=${LDAP_GROUP_BASE_DN},${LDAP_FULL_DOMAIN}"
    - "LDAP_GROUP_REQUEST=(&(objectClass=groupOfUniqueNames)(uniqueMember={dn}))"
    - "LDAP_GROUP_ID_ATTRIBUTE=cn"
    - "SONARQUBE_JDBC_URL=jdbc:mysql://sonar-mysql:3306/${SONAR_MYSQL_DATABASE}?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true"
    - "http_proxy"
    - "https_proxy"
    - "no_proxy"

jenkins:
  container_name: jenkins
  restart: always
  # image: accenture/adop-jenkins:0.2.6
  image: svscorp/adop-jenkins:jenkins-2.73.2-LTS
  #build: ../images/docker-jenkins/
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  ports:
    - "50000:50000/tcp"
  expose:
    - "8080"
    - "50000"
  privileged: true
  environment:
    JENKINS_OPTS: "--prefix=/jenkins"
    ROOT_URL: "${PROTO}://${TARGET_HOST}/jenkins/"
    LDAP_SERVER: "${LDAP_SERVER}"
    LDAP_ROOTDN: "${LDAP_FULL_DOMAIN}"
    LDAP_USER_SEARCH_BASE: "${LDAP_USER_BASE_DN}"
    LDAP_USER_SEARCH: "${LDAP_USER_SEARCH}"
    LDAP_GROUP_SEARCH_BASE: "${LDAP_GROUP_BASE_DN}"
    LDAP_GROUP_SEARCH_FILTER: ""
    LDAP_GROUP_MEMBERSHIP_FILTER: ""
    LDAP_MANAGER_DN: "${LDAP_MANAGER_DN}"
    LDAP_MANAGER_PASSWORD: ${LDAP_PWD}
    LDAP_INHIBIT_INFER_ROOTDN: "false"
    LDAP_DISABLE_MAIL_ADDRESS_RESOLVER: "false"
    LDAP_DISPLAY_NAME_ATTRIBUTE_NAME: "displayName"
    LDAP_MAIL_ADDRESS_ATTRIBUTE_NAME: "mail"
    LDAP_GROUP_NAME_ADMIN: "${LDAP_GROUP_NAME_ADMIN}"
    INITIAL_ADMIN_USER: ${INITIAL_ADMIN_USER}
    INITIAL_ADMIN_PASSWORD: ${INITIAL_ADMIN_PASSWORD_PLAIN}
    GERRIT_HOST_NAME: "gerrit"
    GERRIT_FRONT_END_URL: "http://gerrit:8080/gerrit"
    GERRIT_JENKINS_USERNAME: "${GERRIT_JENKINS_USERNAME}"
    GERRIT_JENKINS_PASSWORD: ${PASSWORD_JENKINS}
    SONAR_SERVER_URL: "http://sonar:9000/sonar/"
    SONAR_ACCOUNT_LOGIN: ${SONAR_ACCOUNT_LOGIN}
    SONAR_ACCOUNT_PASSWORD: ${PASSWORD_JENKINS}
    SONAR_DB_URL: "jdbc:mysql://sonar-mysql:3306/sonar?useUnicode=true&amp;characterEncoding=utf8"
    SONAR_DB_LOGIN: ${SONAR_DB_LOGIN}
    SONAR_DB_PASSWORD: ${SONAR_DB_PASSWORD}
    SONAR_PLUGIN_VERSION: ""
    SONAR_ADDITIONAL_PROPS: ""
    SONAR_RUNNER_VERSION: "2.4"
    ANT_VERSION: "1.9.4"
    MAVEN_VERSION: "3.0.5"
    NODEJS_VERSION: "6.9.4"
    NODEJS_GLOBAL_PACKAGES: "grunt-cli@~0.1.13 bower@~1.3.12 plato@~1.2.1"
    NODEJS_PACKAGES_REFRESH_HOURS: "72"
    GIT_GLOBAL_CONFIG_NAME: "Liberty Global Jenkins"
    GROOVY_VERSION: "2.4.8"
    GIT_GLOBAL_CONFIG_EMAIL: "jenkins@${LDAP_DOMAIN}"
    DOCKER_TLS_VERIFY: ${DOCKER_TLS_VERIFY}
    DOCKER_HOST: ${DOCKER_HOST}
    DOCKER_CLIENT_CERT_PATH: ${DOCKER_CLIENT_CERT_PATH}
    DOCKER_NETWORK_NAME: ${CUSTOM_NETWORK_NAME}
    CARTRIDGE_SOURCES: ${CARTRIDGE_SOURCES}
    JAVA_OPTS: "-Dhttp.proxyHost=${HTTP_PROXY_HOST} -Dhttp.proxyPort=${HTTP_PROXY_PORT} -Dhttps.proxyHost=${HTTPS_PROXY_HOST} -Dhttps.proxyPort=${HTTPS_PROXY_PORT} -Dhttp.nonProxyHosts=\"${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}\""
    HTTP_PROXY_HOST:
    HTTP_PROXY_PORT:
    HTTPS_PROXY_HOST:
    HTTPS_PROXY_PORT:
    HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
    http_proxy:
    https_proxy:
    no_proxy:

selenium-hub:
  container_name: selenium-hub
  restart: always
  image: selenium/hub:2.53.0
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  expose:
    - "4444"

selenium-node-chrome:
  container_name: selenium-node-chrome
  restart: always
  image: selenium/node-chrome:2.53.0
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  environment:
    SE_OPTS: "-nodeConfig /var/selenium-config/config-chrome.json"
    REMOTE_HOST: "http://selenium-node-chrome:5555"
    HUB_PORT_4444_TCP_ADDR: "selenium-hub"
    HUB_PORT_4444_TCP_PORT: "4444"

selenium-node-firefox:
  container_name: selenium-node-firefox
  restart: always
  image: selenium/node-firefox:2.53.0
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  environment:
    SE_OPTS: "-nodeConfig /var/selenium-config/config-firefox.json"
    REMOTE_HOST: "http://selenium-node-firefox:5555"
    HUB_PORT_4444_TCP_ADDR: "selenium-hub"
    HUB_PORT_4444_TCP_PORT: "4444"

nexus:
  container_name: nexus
  restart: always
  image:  accenture/adop-nexus:0.1.3
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  expose:
    - "8081"
  environment:
    CONTEXT_PATH: /nexus
    NEXUS_BASE_URL: "${PROTO}://${TARGET_HOST}/nexus"
    LDAP_SEARCH_BASE: "${LDAP_FULL_DOMAIN}"
    LDAP_ENABLED: "true"
    LDAP_URL: "ldap"
    LDAP_BIND_DN: "${LDAP_ADMIN},${LDAP_FULL_DOMAIN}"
    LDAP_USER_PASSWORD_ATTRIBUTE: "userPassword"
    LDAP_USER_BASE_DN: "${LDAP_USER_BASE_DN}"
    LDAP_GROUP_BASE_DN: "${LDAP_GROUP_BASE_DN}"
    LDAP_BIND_PASSWORD: ${LDAP_PWD}
    http_proxy:
    https_proxy:
    no_proxy:

ldap-ltb:
  container_name: ldap-ltb
  restart: always
  image: accenture/adop-ldap-ltb:0.2.0
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  expose:
    - "80"
  environment:
    LDAP_LTB_URL: "${LDAP_PROTOCOL}://${LDAP_SERVER}"
    LDAP_LTB_DN: "${LDAP_ADMIN},${LDAP_FULL_DOMAIN}"
    LDAP_LTB_PWD: "${LDAP_PWD}"
    LDAP_LTB_BS: "${LDAP_FULL_DOMAIN}"

ldap-phpadmin:
  container_name: ldap-phpadmin
  restart: always
  image: accenture/adop-ldap-phpadmin:0.1.0
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  expose:
    - "80"
  environment:
    LDAP_SERVER_NAME: "LDAP"
    LDAP_SERVER_HOST: "${LDAP_HOST}"
    LDAP_SERVER_PORT: "${LDAP_PORT}"
    LDAP_SERVER_BIND_ID: "${LDAP_ADMIN},${LDAP_FULL_DOMAIN}"
    LDAP_SERVER_BASE_DN: "${LDAP_FULL_DOMAIN}"

registry:
  container_name: registry
  restart: always
  image: registry:2.6.2
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  expose:
    - "5000"
  environment:
    REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
    REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry/fullchain.pem
    REGISTRY_HTTP_TLS_KEY: /certs/registry/privkey.pem

### EXTRA TOOLS ####

gitlab:
  image: gitlab/gitlab-ce:10.1.0-ce.0
  container_name: gitlab
  restart: always
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  expose:
    - "80"
    - "443"
    - "22"
  environment:
    GITLAB_ROOT_PASSWORD: "${GITLAB_ROOT_PASSWORD}"
    http_proxy:
    https_proxy:
    no_proxy:
    GITLAB_OMNIBUS_CONFIG: |
     external_url '${PROTO}://${TARGET_HOST}/gitlab'
     gitlab_rails['ldap_enabled'] = true
     nginx['listen_port'] = 80
     nginx['listen_https'] = false
     nginx['proxy_set_headers'] = {
       "X-Forwarded-Proto" => "https",
       "X-Forwarded-Ssl" => "on"
     }
     gitlab_rails['env'] = { "http_proxy"=>"${http_proxy}", "https_proxy"=>"${https_proxy}", "no_proxy"=>"${no_proxy}" }
     gitlab_rails['ldap_servers'] = YAML.load <<-'EOS'
       main:
         label: 'LDAP'
         host: '${LDAP_HOST}'
         port: ${LDAP_PORT}
         uid: 'uid'
         method: 'plain'
         bind_dn: '${LDAP_ADMIN},${LDAP_FULL_DOMAIN}'
         password: '${LDAP_PWD}'
         active_directory: false
         allow_username_or_email_login: true
         block_auto_created_users: false
         base: '${LDAP_FULL_DOMAIN}'
       EOS

restheart:
  image: softinstigate/restheart:3.2.0-beta-1
  container_name: restheart
  restart: always
  net: ${CUSTOM_NETWORK_NAME}

mongodb:
  image: mongo:3.4
  container_name: mongodb
  restart: always
  net: ${CUSTOM_NETWORK_NAME}
  ### As the mongo container starts unauthenticated, for security reasons comment out the below ports
  ### so that mongodb can be accessed from restheart only
  #ports:
  #   - "27017:27017"

mongo-express:
  image: mongo-express
  container_name: mongo-express
  restart: always
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  environment:
    ME_CONFIG_MONGODB_SERVER: mongodb
    ME_CONFIG_SITE_BASEURL: /mongo-express/
                     
### JENKINS SLAVES ###

jenkins-slave-shared-1:
  container_name: jenkins-slave-shared-1
  command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "jenkins-slave-shared-1", "-master", "http://jenkins:8080/jenkins/", "-username", "jenkins", "-password", "${PASSWORD_JENKINS}",
    "-name", "jenkins-slave-shared-1", "-labels", "shared ldap java8", "-mode", "exclusive"]
  restart: always
  image: svscorp/adop-jenkins-slave:jdk-8
  #image: accenture/adop-jenkins-slave:latest
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  privileged: true
  environment:
    HTTP_PROXY_HOST:
    HTTP_PROXY_PORT:
    HTTPS_PROXY_HOST:
    HTTPS_PROXY_PORT:
    HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
    http_proxy:
    https_proxy:
    no_proxy:

jenkins-slave-shared-2:
  container_name: jenkins-slave-shared-2
  command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "jenkins-slave-shared-2", "-master", "http://jenkins:8080/jenkins/", "-username", "jenkins", "-password", "${PASSWORD_JENKINS}",
    "-name", "jenkins-slave-shared-2", "-labels", "shared ldap java8", "-mode", "exclusive"]
  restart: always
  image: svscorp/adop-jenkins-slave:jdk-8
  #image: accenture/adop-jenkins-slave:latest
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  privileged: true
  environment:
    HTTP_PROXY_HOST:
    HTTP_PROXY_PORT:
    HTTPS_PROXY_HOST:
    HTTPS_PROXY_PORT:
    HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
    http_proxy:
    https_proxy:
    no_proxy:

jenkins-slave-shared-3:
  container_name: jenkins-slave-shared-3
  command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "jenkins-slave-shared-3", "-master", "http://jenkins:8080/jenkins/", "-username", "jenkins", "-password", "${PASSWORD_JENKINS}",
    "-name", "jenkins-slave-shared-3", "-labels", "shared ldap java8", "-mode", "exclusive"]
  restart: always
  image: svscorp/adop-jenkins-slave:jdk-8
  #image: accenture/adop-jenkins-slave:latest
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  privileged: true
  environment:
    HTTP_PROXY_HOST:
    HTTP_PROXY_PORT:
    HTTPS_PROXY_HOST:
    HTTPS_PROXY_PORT:
    HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
    http_proxy:
    https_proxy:
    no_proxy:

jenkins-slave-bss-clarify:
  container_name: jenkins-slave-bss-clarify
  command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "jenkins-slave-bss-clarify", "-master", "http://jenkins:8080/jenkins/", "-username", "jenkins", "-password", "${PASSWORD_JENKINS}",
    "-name", "jenkins-slave-bss-clarify", "-labels", "bss-clarify bss-clarify-1 clarify clarify-1", "-mode", "exclusive"]
  restart: always
  image: svscorp/adop-jenkins-slave:jdk-8
  #image: accenture/adop-jenkins-slave:latest
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  privileged: true
    HTTP_PROXY_HOST:
    HTTP_PROXY_PORT:
    HTTPS_PROXY_HOST:
    HTTPS_PROXY_PORT:
    HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
    http_proxy:
    https_proxy:
    no_proxy:

jenkins-slave-bss-kenan:
  container_name: jenkins-slave-bss-kenan
  command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "jenkins-slave-bss-kenan", "-master", "http://jenkins:8080/jenkins/", "-username", "jenkins", "-password", "${PASSWORD_JENKINS}",
    "-name", "jenkins-slave-bss-kenan", "-labels", "bss-kenan bss-kenan-1 kenna kenan-1", "-mode", "exclusive"]
  restart: always
  image: svscorp/adop-jenkins-slave:jdk-8
  #image: accenture/adop-jenkins-slave:latest
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  privileged: true
  environment:
    HTTP_PROXY_HOST:
    HTTP_PROXY_PORT:
    HTTPS_PROXY_HOST:
    HTTPS_PROXY_PORT:
    HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
    HTTP_NON_PROXY_HOSTS: "${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}"
    http_proxy:
    https_proxy:
    no_proxy:

jenkins-slave-oss-asap:
  container_name: jenkins-slave-oss-asap
  command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "jenkins-slave-oss-asap", "-master", "http://jenkins:8080/jenkins/", "-username", "jenkins", "-password", "${PASSWORD_JENKINS}",
    "-name", "jenkins-slave-oss-asap", "-labels", "oss-asap oss-asap-1 asap asap-1", "-mode", "exclusive"]
  restart: always
  image: svscorp/adop-jenkins-slave:jdk-8 
  #image: accenture/adop-jenkins-slave:latest
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  privileged: true
  environment:
    HTTP_PROXY_HOST:
    HTTP_PROXY_PORT:
    HTTPS_PROXY_HOST:
    HTTPS_PROXY_PORT:
    HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
    http_proxy:
    https_proxy:
    no_proxy:

jenkins-slave-oss-cdm:
  container_name: jenkins-slave-oss-cdm
  command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "jenkins-slave-oss-cdm", "-master", "http://jenkins:8080/jenkins/", "-username", "jenkins", "-password", "${PASSWORD_JENKINS}",
    "-name", "jenkins-slave-oss-cdm", "-labels", "oss-cdm oss-cdm-1 cdm cdm-1", "-mode", "exclusive"]
  restart: always
  image: svscorp/adop-jenkins-slave:jdk-8 
  #image: accenture/adop-jenkins-slave:latest
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  privileged: true
  environment:
    SLAVE_NAME: "jenkins-slave-oss-cdm"
    SLAVE_LABELS: "cdm"
    SWARM_PASSWORD: ${PASSWORD_JENKINS}
    SLAVE_EXECUTORS: ${SLAVE_EXECUTORS}
    HTTP_PROXY_HOST:
    HTTP_PROXY_PORT:
    HTTPS_PROXY_HOST:
    HTTPS_PROXY_PORT:
    HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
    http_proxy:
    https_proxy:
    no_proxy:

jenkins-slave-online-aem-1:
  container_name: jenkins-slave-online-aem
  command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "jenkins-slave-online-aem-1", "-master", "http://jenkins:8080/jenkins/", "-username", "jenkins", "-password", "${PASSWORD_JENKINS}",
    "-name", "jenkins-slave-online-aem-1", "-labels", "online-aem online-aem-1 aem aem-1", "-mode", "exclusive"]
  restart: always
  image: svscorp/adop-jenkins-slave:jdk-8
  #image: accenture/adop-jenkins-slave:latest
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  privileged: true
  environment:
    HTTP_PROXY_HOST:
    HTTP_PROXY_PORT:
    HTTPS_PROXY_HOST:
    HTTPS_PROXY_PORT:
    HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
    http_proxy:
    https_proxy:
    no_proxy:

jenkins-slave-online-aem-2:
  container_name: jenkins-slave-online-aem
  command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "jenkins-slave-online-aem-2", "-master", "http://jenkins:8080/jenkins/", "-username", "jenkins", "-password", "${PASSWORD_JENKINS}",
    "-name", "jenkins-slave-online-aem-2", "-labels", "online-aem online-aem-2 aem aem-2", "-mode", "exclusive"]
  restart: always
  image: svscorp/adop-jenkins-slave:jdk-8
  #image: accenture/adop-jenkins-slave:latest
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  privileged: true
  environment:
    HTTP_PROXY_HOST:
    HTTP_PROXY_PORT:
    HTTPS_PROXY_HOST:
    HTTPS_PROXY_PORT:
    HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
    http_proxy:
    https_proxy:
    no_proxy:

jenkins-slave-mdw-core-off-1:
  container_name: jenkins-slave-mdw-core-off-1
  command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "jenkins-slave-mdw-core-off-1", "-master", "http://jenkins:8080/jenkins/", "-username", "jenkins", "-password", "${PASSWORD_JENKINS}",
    "-name", "jenkins-slave-mdw-core-off-1", "-labels", "mdw-core-off mdw-core-off-1 core-off core-off-1", "-mode", "exclusive"]
  restart: always
  image: svscorp/adop-jenkins-slave:jdk-8
  #image: accenture/adop-jenkins-slave:latest
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  privileged: true
  environment:
    HTTP_PROXY_HOST:
    HTTP_PROXY_PORT:
    HTTPS_PROXY_HOST:
    HTTPS_PROXY_PORT:
    HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
    http_proxy:
    https_proxy:
    no_proxy:

jenkins-slave-mdw-core-off-2:
  container_name: jenkins-slave-mdw-core-off-2
  command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "jenkins-slave-mdw-core-off-2", "-master", "http://jenkins:8080/jenkins/", "-username", "jenkins", "-password", "${PASSWORD_JENKINS}",
    "-name", "jenkins-slave-mdw-core-off-2", "-labels", "mdw-core-off mdw-core-off-2 core-off core-off-2", "-mode", "exclusive"]
  restart: always
  image: svscorp/adop-jenkins-slave:jdk-8
  #image: accenture/adop-jenkins-slave:latest
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  privileged: true
  environment:
    HTTP_PROXY_HOST:
    HTTP_PROXY_PORT:
    HTTPS_PROXY_HOST:
    HTTPS_PROXY_PORT:
    HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
    http_proxy:
    https_proxy:
    no_proxy:

jenkins-slave-obo:
  container_name: jenkins-slave-obo
  command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "jenkins-slave-obo", "-master", "http://jenkins:8080/jenkins/", "-username", "jenkins", "-password", "${PASSWORD_JENKINS}",
    "-name", "jenkins-slave-obo", "-labels", "obo", "-mode", "exclusive"]
  restart: always
  image: svscorp/adop-jenkins-slave:jdk-8
  #image: accenture/adop-jenkins-slave:latest
  net: ${CUSTOM_NETWORK_NAME}
  extra_hosts:
    - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
  privileged: true
  environment:
    HTTP_PROXY_HOST:
    HTTP_PROXY_PORT:
    HTTPS_PROXY_HOST:
    HTTPS_PROXY_PORT:
    HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
    http_proxy:
    https_proxy:
    no_proxy:
