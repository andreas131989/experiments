#!/bin/bash


# LDAP

export LDAP_PROTOCOL="{{ adop_ldap_protocol }}"
export LDAP_HOST="{{ adop_ldap_host }}"
export LDAP_PORT="{{ adop_ldap_port }}"
export LDAP_SERVER="${LDAP_HOST}:${LDAP_PORT}"
export LDAP_DOMAIN="{{ adop_ldap_domain }}"
export LDAP_FULL_DOMAIN="{{ adop_ldap_full_domain }}"
export LDAP_USER_BASE_DN="ou=people"
export LDAP_GROUP_BASE_DN="ou=groups"
export LDAP_USER_SEARCH="uid={0}"
export LDAP_ADMIN="cn=admin"
export LDAP_ACCOUNTPATTERN='(cn=${username})'
export LDAP_ACCOUNTFULLNAME='${cn}'
export LDAP_GROUPPATTERN='(cn=${groupname})'
export LDAP_GROUPMEMBERPATTERN='(uniqueMember=${dn})'
export LDAP_MANAGER_DN="cn=admin,{{ adop_ldap_full_domain }}"
export LDAP_GROUP_NAME_ADMIN="administrators"

# Gerrit MySQL

export GERRIT_MYSQL_USER="gerrit"
export GERRIT_MYSQL_DATABASE="gerrit"

# Gerrit

export GERRIT_USER_NAME="Gerrit Code Review"
export GERRIT_USER_EMAIL="gerrit@adop"

# Gerrit and Jenkins
export GERRIT_JENKINS_USERNAME="jenkins"

# Sonar MySQL

export SONAR_MYSQL_USER="sonar"
export SONAR_MYSQL_DATABASE="sonar"

# Jenkins

export SONAR_ACCOUNT_LOGIN="jenkins"
export SONAR_DB_LOGIN=${SONAR_MYSQL_USER}
export CARTRIDGE_SOURCES="https://raw.githubusercontent.com/Accenture/adop-cartridges/master/cartridges.yml"

# Jenkins Slave
export SLAVE_EXECUTORS=5

# Sensu
export SENSU_CLIENT_SUBSCRIPTIONS="proxy,gerrit,jenkins,sonarqube,sensu,kibana,nexus,gitlab,restheart"

# Jenkins Certificate Path
####
# "//" to cater for both Windows and Unix path
####
export DOCKER_CLIENT_CERT_PATH="//root/.docker/"

# SSL Settings
export PROTO="{{ adop_protocol }}"

# NGINX Settings
export NGINX_PORT="{{ adop_nginx_port }}"
export NGINX_SSL="{{ adop_nginx_ssl }}"
export REDIRECT_PROTOCOL="{{ adop_redirect_protocol }}"

# PROXY VARIABLES FOR JENKINS
export HTTP_PROXY_HOST="{{ proxy_host }}"
export HTTP_PROXY_PORT="{{ proxy_port }}"
export HTTPS_PROXY_HOST="{{ proxy_host }}"
export HTTPS_PROXY_PORT="{{ proxy_port }}"
export HTTP_NON_PROXY_HOSTS="{{ no_proxy_hosts_pattern }}"
export HTTP_NON_PROXY_HOSTS_JOIN_PIPE="{{ no_proxy_hosts_join_pipe }}"

# Temporary measure, until DNS is in place
export FRONTEND_1_PRIVATE_IP="{{ frontent_1_private_ip }}"

# Get internal target host for Swarm setup and outer-proxy
# export INTERNAL_TARGET_HOST=$(ip -4 route get 8.8.8.8 | grep -Po '(?<=src )(\S+)')
export INTERNAL_TARGET_HOST="{{ internal_platform_ip_or_lb }}"


# Env proxy setup
export http_proxy="{{ proxy_url }}"
export https_proxy="{{ proxy_url }}"
export no_proxy="{{ no_proxy_hosts }}"

export HTTP_PROXY="{{ proxy_url }}"
export HTTPS_PROXY="{{ proxy_url }}"
export NO_PROXY="{{ no_proxy_hosts }}"

# Platform(stack/project) name
export PLATFORM_NAME="lgadop"

# Registry Certs
export REGISTRY_CERT_VOL="registry_certs"