- name: Downloading ADOP
  git:
    repo: "{{ adop_repo_url }}"
    dest: /adop
    version: "{{ adop_repo_revision }}"
    force: yes # download new each time because we replace some files via templates

# - name: Making sure platform-secrets doesn't exist
#   file:
#     path: /adop/platform.secrets.sh
#     state: absent
#   ignore_errors: true

- name: Setup adop environment variables
  tags:
    - replace-files-and-init
    - update-platform
  template:
    src: env.config.sh.j2
    dest: /adop/env.config.sh

- name: Create volumes for preinit adop configuration
  command: "docker volume create {{ item }}"
  tags:
    - replace-files-and-init
  with_items:
    - "{{ nginx_ssl_volume }}"
    - "{{ registry_ssl_volume }}" # this one will be created anyway, but we need to copy certificates before launching adop init
    - "{{ jenkins_volume }}"
    - "{{ restheart_config_volume }}"

- name: Get ssl volume location
  command: "docker volume inspect --format {% raw %}'{{ .Mountpoint }}'{% endraw %} {{ nginx_ssl_volume }}"
  register: ssl_volume_path
  tags:
    - replace-files-and-init

- name: Get registry_certs volume location
  command: "docker volume inspect --format {% raw %}'{{ .Mountpoint }}'{% endraw %} {{ registry_ssl_volume }}"
  register: registry_certs_volume_path
  tags:
    - replace-files-and-init

- name: Get jenkins volume location
  command: "docker volume inspect --format {% raw %}'{{ .Mountpoint }}'{% endraw %} {{ jenkins_volume }}"
  register: jenkins_volume_path
  tags:
    - replace-files-and-init

- name: Get gitlab config volume location
  command: "docker volume inspect --format {% raw %}'{{ .Mountpoint }}'{% endraw %} gitlab_config"
  register: gitlab_config_volume_path
  tags:
    - replace-files-and-init

- name: Get sonar config volume location
  command: "docker volume inspect --format {% raw %}'{{ .Mountpoint }}'{% endraw %} sonar_conf"
  register: sonar_conf_volume_path
  tags:
    - replace-files-and-init

- name: Get restheart (mongodb-api) config volume location
  command: "docker volume inspect --format {% raw %}'{{ .Mountpoint }}'{% endraw %} restheart_config"
  register: restheart_config_volume_path
  tags:
    - replace-files-and-init

- name: Add SSL certificates
  copy:
    src: "lgi/nginx_certificates/{{ item.file }}"
    dest: "{{ item.vol_path }}/{{ item.target_name }}"
    mode: 0600
  with_items:
    - { vol_path: "{{ ssl_volume_path.stdout }}", file: host.crt, target_name: host.crt }
    - { vol_path: "{{ ssl_volume_path.stdout }}", file: host.key, target_name: host.key }
    - { vol_path: "{{ ssl_volume_path.stdout }}", file: selenium-host.crt, target_name: selenium-host.crt }
    - { vol_path: "{{ ssl_volume_path.stdout }}", file: selenium-host.key, target_name: selenium-host.key }
    - { vol_path: "{{ ssl_volume_path.stdout }}", file: fullchain.pem, target_name: registry_fullchain.pem }
    - { vol_path: "{{ ssl_volume_path.stdout }}", file: privkey.pem, target_name: registry_privkey.pem }
    - { vol_path: "{{ registry_certs_volume_path.stdout }}/registry", file: fullchain.pem, target_name: fullchain.pem }
    - { vol_path: "{{ registry_certs_volume_path.stdout }}/registry", file: privkey.pem, target_name: privkey.pem }
    - { vol_path: "{{ gitlab_config_volume_path.stdout }}/ssl", file: host.crt, target_name: "{{ public_domain }}.crt" }
    - { vol_path: "{{ gitlab_config_volume_path.stdout }}/ssl", file: host.key, target_name: "{{ public_domain }}.key" }
  tags:
    - replace-files-and-init
    - ssl-only

- name: Create groovy directory to put proxy config
  tags:
    - replace-files-and-init
  file:
    path: "{{ jenkins_volume_path.stdout }}/init.groovy.d"
    state: directory
    mode: 0755

- name: Add jenkins proxy
  tags:
    - replace-files-and-init
  template:
    src: "lgi/jenkins/jenkins_proxy.groovy.j2"
    dest: "{{ jenkins_volume_path.stdout }}/init.groovy.d/aaa_jenkins_proxy.groovy"
    mode: 0644

- name: Replacing dockercompose, volume and logging definitions (team slaves)
  copy:
    src: "lgi/adop-docker-compose/{{ item.src_folder }}/{{ item.file }}"
    dest: "{{ item.vol_path }}/{{ item.file }}"
  tags:
    - replace-files-and-init
    - update-platform
  with_items:
    - { vol_path: "/adop", src_folder: '.', file: docker-compose.yml }
    - { vol_path: "/adop", src_folder: '.', file: credentials.generate.sh }
    - { vol_path: "/adop", src_folder: '.', file: platform.secrets.sh.example }
    - { vol_path: "/adop/etc/volumes/local", src_folder: 'volumes', file: default.yml }
    - { vol_path: "/adop/etc/logging/syslog", src_folder: 'logging', file: default.yml }


- name: Add sonar properties and wrapper
  template:
    src: "lgi/sonar/{{ item.file }}.j2"
    dest: "{{ item.vol_path }}/{{ item.file }}"
  tags:
    - replace-files-and-init
  with_items:
    - { vol_path: "{{ sonar_conf_volume_path.stdout }}", file: sonar.properties }
    - { vol_path: "{{ sonar_conf_volume_path.stdout }}", file: wrapper.conf }

- name: Add Jenkins proxy file and theme to jenkins_home
  template:
    src: "lgi/jenkins/{{ item.file }}.j2"
    dest: "{{ item.vol_path }}/{{ item.file }}"
  with_items:
    - { vol_path: "{{ jenkins_volume_path.stdout }}", file: org.codefirst.SimpleThemeDecorator.xml }
    - { vol_path: "{{ jenkins_volume_path.stdout }}", file: proxy.xml }
    - { vol_path: "{{ jenkins_volume_path.stdout }}", file: .gitconfig }
  tags:
    - replace-files-and-init

- name: Add MongoDB API (RESTHeart) security and config data
  template:
    src: "lgi/restheart/{{ item.file }}.j2"
    dest: "{{ item.vol_path }}/{{ item.file }}"
  tags:
    - replace-files-and-init
  with_items:
    - { vol_path: "{{ restheart_config_volume_path.stdout }}", file: security.yml }
    - { vol_path: "{{ restheart_config_volume_path.stdout }}", file: restheart.yml }

- name: Initializing ADOP Platform
  register: adop_init
  tags:
    - replace-files-and-init
    - update-platform
  expect:
    command: ./adop compose init
    chdir: /adop
    timeout: 1500
    responses:
      (?i)username: "lgadop"

- debug: var=adop_init.stdout_lines
