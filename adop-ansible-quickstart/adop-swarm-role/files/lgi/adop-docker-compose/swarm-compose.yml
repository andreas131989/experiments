version: '3.2'

networks:
  private:
    external:
      name: ${CUSTOM_NETWORK_NAME}

services:
  elasticsearch:
    image: elasticsearch:2.1.1
    command: elasticsearch -Des.network.host=0.0.0.0
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  logstash:
    image: accenture/adop-logstash:0.1.0
    environment:
      - "constraint:tier==public"
      - LS_HEAP_SIZE=1024m
    ports:
      - "12201:12201/udp"
      - "25826:25826/udp"
      - "5000:5000/tcp"
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    deploy:
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.frontend == true
    logging:
      driver: "journald"

  kibana:
    image: kibana:4.3.1
    environment:
    command: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: kibana
        labels: kibana,tool
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  proxy:
    image: svscorp/adop-nginx:no-internal-ldap
    # image: accenture/adop-nginx:latest
    ports:
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      - "constraint:tier==public"
      - "NGINX_PORT=${NGINX_PORT}"
      - "NGINX_SSL=${NGINX_SSL}"
      - "REDIRECT_PROTOCOL=${REDIRECT_PROTOCOL}"
      - "LDAP_PROTOCOL=${LDAP_PROTOCOL}"
      - "LDAP_SERVER=${LDAP_SERVER}"
      - "LDAP_USERNAME=${LDAP_ADMIN},${LDAP_SERVICES_USERS},${LDAP_FULL_DOMAIN}"
      - "LDAP_PASSWORD=${LDAP_PWD}"
      - "LDAP_USER_BASE_DN=${LDAP_USER_BASE_DN},dc=upc,dc=biz"
      - "LDAP_GROUP_ATTRIBUTE=member"
      - "LDAP_USER_ID_ATTRIBUTE=uid"
      - "LDAP_USER_OBJECT_CLASS=person"
      - "CUSTOM_CONF=true"
      - "CUSTOM_HTML=true"
      - "http_proxy"
      - "https_proxy"
      - "no_proxy"
    volumes:
      - nginx_config:/etc/nginx
      - nginx_releasenote:/usr/share/nginx/html
      - nginx_ssl:/etc/nginx/ssl
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: proxy
        labels: proxy,tool
    deploy:
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.frontend == true

  gerrit-mysql:
    image: mysql:5.6.25
    expose:
      - "3306"
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      MYSQL_ROOT_PASSWORD: ${PASSWORD_SQL}
      MYSQL_USER: ${GERRIT_MYSQL_USER}
      MYSQL_PASSWORD: ${GERRIT_MYSQL_PASSWORD}
      MYSQL_DATABASE: ${GERRIT_MYSQL_DATABASE}
    volumes:
      - gerrit_mysql_data:/var/lib/mysql
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: gerrit-mysql
        labels: gerrit-mysql,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  gerrit:
    # image: accenture/adop-gerrit:0.1.5
    image: svscorp/adop-gerrit:ldap-user-id
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      - "dependency:container==gerrit-mysql"
      - "REPO_PATH=/var/git/repos"
      - "WEBURL=${PROTO}://${TARGET_HOST}/gerrit/"
      - "DATABASE_TYPE=mysql"
      - "DB_HOSTNAME=gerrit-mysql"
      - "DB_PORT=3306"
      - "DB_NAME=${GERRIT_MYSQL_DATABASE}"
      - "DB_USER=${GERRIT_MYSQL_USER}"
      - "DB_PASSWORD=${GERRIT_MYSQL_PASSWORD}"
      - "AUTH_LOGOUTURL=${PROTO}://${TARGET_HOST}/gerrit/"
      - "AUTH_TYPE=LDAP"
      - "GERRIT_PASSWORD=${PASSWORD_GERRIT}"
      - "JENKINS_PASSWORD=${PASSWORD_JENKINS}"
      - "INITIAL_ADMIN_USER=${LDAP_INTERNAL_USER}"
      - "INITIAL_ADMIN_PASSWORD=${LDAP_INTERNAL_PASSWORD}"
      - "LDAP_SERVER=${LDAP_SERVER}"
      - "LDAP_ACCOUNTBASE=${LDAP_FULL_DOMAIN}"
      - "LDAP_ACCOUNTPATTERN=${LDAP_ACCOUNTPATTERN}"
      - "LDAP_ACCOUNTFULLNAME=${LDAP_ACCOUNTFULLNAME}"
      - "LDAP_ACCOUNTEMAILADDRESS=mail"
      - "LDAP_USERNAME=${LDAP_ADMIN},${LDAP_SERVICES_USERS},${LDAP_FULL_DOMAIN}"
      - "LDAP_PASSWORD=${LDAP_PWD}"
      - "LDAP_GROUPBASE=${LDAP_GROUP_BASE_DN},${LDAP_FULL_DOMAIN}"
      - "LDAP_GROUPPATTERN=${LDAP_GROUPPATTERN}"
      - "LDAP_GROUPMEMBERPATTERN=${LDAP_GROUPMEMBERPATTERN}"
      - "HTTPD_LISTENURL=proxy-${PROTO}://0.0.0.0:8080/gerrit"
      - "USER_EMAIL=${GERRIT_USER_EMAIL}"
      - "JAVA_OPTIONS=-Dhttp.proxyHost=${HTTP_PROXY_HOST} -Dhttp.proxyPort=${HTTP_PROXY_PORT} -Dhttps.proxyHost=${HTTPS_PROXY_HOST} -Dhttps.proxyPort=${HTTPS_PROXY_PORT} -Dhttp.nonProxyHosts=\"${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}\""
      - "DOWNLOAD_SCHEME=http"
      - "http_proxy"
      - "https_proxy"
      - "no_proxy"
      # Added w.r.t 0.1.5
      - "ADOP_INTERNAL_LDAP=false"
      # Custom image (0.1.6 pending...)
      - "LDAP_USER_ID_ATTRIBUTE=uid"
    volumes:
      - git_repos:/var/git/repos
      - gerrit_review_site:/var/gerrit/review_site
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    user: root
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: gerrit
        labels: gerrit,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  sensu-uchiwa:
    image: sstarcher/uchiwa:0.15.0
    expose:
      - "3000"
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      SENSU_HOSTNAME: sensu-api
      SENSU_DC_NAME: Sensu
      http_proxy:
      https_proxy:
      no_proxy:
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: sensu-uchiwa
        labels: sensu-uchiwa,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  sensu-api:
    image: accenture/adop-sensu:0.2.0
    command: api
    expose:
      - "4567"
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      TRANSPORT_NAME: rabbitmq
      RABBITMQ_HOST: sensu-rabbitmq
      REDIS_HOST: sensu-redis
    volumes:
      - sensu_api_conf:/etc/sensu/conf.d
      - sensu_server_check:/etc/sensu/check.d
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: sensu-api
        labels: sensu-api,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  sensu-server:
    image: accenture/adop-sensu:0.2.0
    command: server
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      API_HOST: sensu-api
      # RUNTIME_INSTALL: sensu-plugins-docker
      RABBITMQ_HOST: sensu-rabbitmq
      REDIS_HOST: sensu-redis
      TRANSPORT_NAME: rabbitmq
    volumes:
      - sensu_server_conf:/etc/sensu/conf.d
      - sensu_server_check:/etc/sensu/check.d
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: sensu-server
        labels: sensu-server,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  sensu-client-services:
    image: accenture/adop-sensu:0.2.0
    command: client
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      TRANSPORT_NAME: rabbitmq
      CLIENT_NAME: core
      CLIENT_ADDRESS: 127.0.0.1
      RABBITMQ_HOST: sensu-rabbitmq
      JENKINS_PREFIX: jenkins
      CLIENT_SUBSCRIPTIONS: "${SENSU_CLIENT_SUBSCRIPTIONS}"
    volumes:
      - sensu_client_conf:/etc/sensu/conf.d
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: sensu-client
        labels: sensu-client,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  sensu-client-system:
    # image: accenture/adop-sensu:latest
    image: svscorp/adop-sensu:latest
    command: client
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      TRANSPORT_NAME: rabbitmq
      # CLIENT_NAME: "node-client-{{.Node.Hostname}}"
      CLIENT_NAME: ${RANDOM}
      CLIENT_ADDRESS: 127.0.0.1
      RABBITMQ_HOST: sensu-rabbitmq
      JENKINS_PREFIX: jenkins
      CLIENT_SUBSCRIPTIONS: "basic"
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: sensu-client
        labels: sensu-client,tool
    deploy:
      endpoint_mode: dnsrr
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any

  sensu-rabbitmq:
    image: rabbitmq:3.5.7-management
    expose:
      - "5672"
      - "5671"
      - "15672"
      - "15671"
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    volumes:
      - sensu_rabbitmq_data:/var/lib/rabbitmq
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: sensu-rabbitmq
        labels: sensu-rabbitmq,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  sensu-redis:
    image: redis:3.0.7
    expose:
      - "6379"
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    volumes:
      - sensu_redis_data:/data
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: sensu-redis
        labels: sensu-redis,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  sonar-mysql:
    image: mysql:5.6.25
    expose:
      - "3306"
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      MYSQL_ROOT_PASSWORD: ${PASSWORD_SQL}
      MYSQL_USER: ${SONAR_MYSQL_USER}
      MYSQL_PASSWORD: ${SONAR_MYSQL_PASSWORD}
      MYSQL_DATABASE: ${SONAR_MYSQL_DATABASE}
    volumes:
      - sonar_mysql_data:/var/lib/mysql
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: sonar-mysql
        labels: sonar-mysql,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  sonar:
    image: accenture/adop-sonar:0.3.5
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      - "dependency:container==sonar-mysql"
      - "SONARQUBE_JDBC_USERNAME=${SONAR_MYSQL_USER}"
      - "SONARQUBE_JDBC_PASSWORD=${SONAR_MYSQL_PASSWORD}"
      - "LDAP_URL=ldap://${LDAP_SERVER}"
      - "SONARQUBE_SERVER_BASE=${PROTO}://${TARGET_HOST}/sonar"
      - "LDAP_BIND_DN=${LDAP_ADMIN},${LDAP_SERVICES_USERS},${LDAP_FULL_DOMAIN}"
      - "LDAP_BIND_PASSWORD=${LDAP_PWD}"
      - "LDAP_USER_BASE_DN=${LDAP_USER_BASE_DN},${LDAP_FULL_DOMAIN}"
      - "LDAP_USER_REQUEST=(&(objectClass=inetOrgPerson)(uid={login}))"
      - "LDAP_USER_REAL_NAME_ATTRIBUTE=displayName"
      - "LDAP_USER_EMAIL_ATTRIBUTE=mail"
      - "LDAP_GROUP_BASE_DN=${LDAP_GROUP_BASE_DN},${LDAP_FULL_DOMAIN}"
      - "LDAP_GROUP_REQUEST=(&(objectClass=groupOfUniqueNames)(uniqueMember={dn}))"
      - "LDAP_GROUP_ID_ATTRIBUTE=cn"
      - "SONARQUBE_JDBC_URL=jdbc:mysql://sonar-mysql:3306/${SONAR_MYSQL_DATABASE}?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true"
      - "http_proxy"
      - "https_proxy"
      - "no_proxy"
    volumes:
      - sonar_data:/opt/sonarqube/data
      - sonar_conf:/opt/sonarqube/conf
      - sonar_extensions:/opt/sonarqube/extensions
      - sonar_logs:/opt/sonarqube/logs
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: sonar
        labels: sonar,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  jenkins:
    #image: accenture/adop-jenkins:0.2.6
    image: svscorp/adop-jenkins:jenkins-2.73.2-LTS
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    ports:
      - "50000:50000/tcp"
    expose:
      - "8080"
    environment:
      JENKINS_OPTS: "--prefix=/jenkins"
      ROOT_URL: "${PROTO}://${TARGET_HOST}/jenkins/"
      INITIAL_ADMIN_USER: ${INITIAL_ADMIN_USER}
      INITIAL_ADMIN_PASSWORD: ${INITIAL_ADMIN_PASSWORD_PLAIN}
      LDAP_SERVER: "${LDAP_SERVER}"
      LDAP_ROOTDN: "${LDAP_FULL_DOMAIN}"
      LDAP_USER_SEARCH_BASE: "${LDAP_USER_BASE_DN}"
      LDAP_USER_SEARCH: "${LDAP_USER_SEARCH}"
      LDAP_GROUP_SEARCH_BASE: "${LDAP_GROUP_BASE_DN}"
      LDAP_GROUP_SEARCH_FILTER: ""
      LDAP_GROUP_MEMBERSHIP_FILTER: ""
      LDAP_MANAGER_DN: "${LDAP_MANAGER_DN}"
      LDAP_MANAGER_PASSWORD: ${LDAP_PWD}
      LDAP_INHIBIT_INFER_ROOTDN: "false"
      LDAP_DISABLE_MAIL_ADDRESS_RESOLVER: "false"
      LDAP_DISPLAY_NAME_ATTRIBUTE_NAME: "displayName"
      LDAP_MAIL_ADDRESS_ATTRIBUTE_NAME: "mail"
      LDAP_GROUP_NAME_ADMIN: "${LDAP_GROUP_NAME_ADMIN}"
      GERRIT_HOST_NAME: "gerrit"
      GERRIT_FRONT_END_URL: "http://gerrit:8080/gerrit"
      GERRIT_JENKINS_USERNAME: "${GERRIT_JENKINS_USERNAME}"
      GERRIT_JENKINS_PASSWORD: ${PASSWORD_JENKINS}
      SONAR_SERVER_URL: "http://sonar:9000/sonar/"
      SONAR_ACCOUNT_LOGIN: ${SONAR_ACCOUNT_LOGIN}
      SONAR_ACCOUNT_PASSWORD: ${PASSWORD_JENKINS}
      SONAR_DB_URL: "jdbc:mysql://sonar-mysql:3306/sonar?useUnicode=true&amp;characterEncoding=utf8"
      SONAR_DB_LOGIN: ${SONAR_DB_LOGIN}
      SONAR_DB_PASSWORD: ${SONAR_DB_PASSWORD}
      SONAR_PLUGIN_VERSION: ""
      SONAR_ADDITIONAL_PROPS: ""
      SONAR_RUNNER_VERSION: "2.4"
      ANT_VERSION: "1.9.4"
      MAVEN_VERSION: "3.0.5"
      NODEJS_VERSION: "6.9.4"
      NODEJS_GLOBAL_PACKAGES: "grunt-cli@~0.1.13 bower@~1.3.12 plato@~1.2.1"
      NODEJS_PACKAGES_REFRESH_HOURS: "72"
      GIT_GLOBAL_CONFIG_NAME: "Liberty Global Jenkins"
      GROOVY_VERSION: "2.4.8"
      GIT_GLOBAL_CONFIG_EMAIL: "jenkins@${LDAP_DOMAIN}"
      DOCKER_TLS_VERIFY: ${DOCKER_TLS_VERIFY}
      DOCKER_HOST: ${DOCKER_HOST}
      DOCKER_CLIENT_CERT_PATH: ${DOCKER_CLIENT_CERT_PATH}
      DOCKER_NETWORK_NAME: ${CUSTOM_NETWORK_NAME}
      CARTRIDGE_SOURCES: ${CARTRIDGE_SOURCES}
      JAVA_OPTS: "-Djdk.tls.trustNameService=true -Djsse.enableSNIExtension=false -Dhttp.proxyHost=${HTTP_PROXY_HOST} -Dhttp.proxyPort=${HTTP_PROXY_PORT} -Dhttps.proxyHost=${HTTPS_PROXY_HOST} -Dhttps.proxyPort=${HTTPS_PROXY_PORT} -Dhttp.nonProxyHosts=\"${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}\""
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins
        labels: jenkins,tool
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
          # - node.labels.tool == true

  selenium-hub:
    image: selenium/hub:2.53.0
    expose:
      - "4444"
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: selenium-hub
        labels: selenium-hub,tool,qa
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  selenium-node-chrome:
    image: selenium/node-chrome:2.53.0
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      SE_OPTS: "-nodeConfig /var/selenium-config/config-chrome.json"
      REMOTE_HOST: "http://selenium-node-chrome:5555"
      HUB_PORT_4444_TCP_ADDR: "selenium-hub"
      HUB_PORT_4444_TCP_PORT: "4444"
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: selenium-node-chrome
        labels: selenium-node-chrome,tool,qa
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  selenium-node-firefox:
    image: selenium/node-firefox:2.53.0
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      SE_OPTS: "-nodeConfig /var/selenium-config/config-firefox.json"
      REMOTE_HOST: "http://selenium-node-firefox:5555"
      HUB_PORT_4444_TCP_ADDR: "selenium-hub"
      HUB_PORT_4444_TCP_PORT: "4444"
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: selenium-node-firefox
        labels: selenium-node-firefox,tool,qa
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  registry:
    image: registry:2.5.1
    expose:
      - "5000"
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry/fullchain.pem
      REGISTRY_HTTP_TLS_KEY: /certs/registry/privkey.pem
    volumes:
      - registry_certs:/certs
      - registry_data:/data
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: registry
        labels: registry,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager

  nexus:
    # image: accenture/adop-nexus:0.1.3
    image: svscorp/adop-nexus:2.14.5-02
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      NEXUS_BASE_URL: "${PROTO}://${TARGET_HOST}/nexus"
      LDAP_SEARCH_BASE: "${LDAP_FULL_DOMAIN}"
      LDAP_ENABLED: "true"
      LDAP_URL: "${LDAP_HOST}"
      LDAP_BIND_DN: "${LDAP_ADMIN},${LDAP_SERVICES_USERS},${LDAP_FULL_DOMAIN}"
      LDAP_USER_PASSWORD_ATTRIBUTE: " "
      LDAP_USER_BASE_DN: "${LDAP_USER_BASE_DN}"
      LDAP_GROUP_BASE_DN: "${LDAP_GROUP_BASE_DN}"
      LDAP_BIND_PASSWORD: ${LDAP_PWD}
      NEXUS_CREATE_CUSTOM_ROLES: "true"
      NEXUS_CUSTOM_ADMIN_ROLE: lgdop-admin
      NEXUS_CUSTOM_DEV_ROLE: lgdop-developer
      NEXUS_CUSTOM_DEPLOY_ROLE: lgdop-viewer
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - nexus_sonatype_work:/sonatype-work
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: nexus
        labels: nexus,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  # EXTRA TOOLS
  gitlab:
    image: gitlab/gitlab-ce:10.1.0-ce.0
    depends_on:
      - "elasticsearch"
      - "logstash"
    environment:
      GITLAB_ROOT_PASSWORD: "${GITLAB_ROOT_PASSWORD}"
      http_proxy:
      https_proxy:
      no_proxy:
      GITLAB_OMNIBUS_CONFIG: |
       external_url '${PROTO}://${TARGET_HOST}/gitlab'
       gitlab_rails['ldap_enabled'] = true
       nginx['listen_port'] = 80
       nginx['listen_https'] = false
       nginx['proxy_set_headers'] = {
         "X-Forwarded-Proto" => "https",
         "X-Forwarded-Ssl" => "on"
       }
       gitlab_rails['env'] = { "http_proxy"=>"${http_proxy}", "https_proxy"=>"${https_proxy}", "no_proxy"=>"${no_proxy}" }
       gitlab_rails['ldap_servers'] = YAML.load <<-'EOS'
         main:
           label: 'LDAP'
           host: '${LDAP_HOST}'
           port: ${LDAP_PORT}
           uid: 'uid'
           method: 'plain'
           bind_dn: '${LDAP_ADMIN},${LDAP_SERVICES_USERS},${LDAP_FULL_DOMAIN}'
           password: '${LDAP_PWD}'
           active_directory: false
           allow_username_or_email_login: true
           block_auto_created_users: false
           base: '${LDAP_FULL_DOMAIN}'
         EOS
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_data:/var/opt/gitlab
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: gitlab
        labels: gitlab,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  restheart:
    image: softinstigate/restheart:3.2.0-beta-1
    volumes:
      - restheart_config:/opt/restheart/etc:ro
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    depends_on:
      - "mongodb"
      - "ldap"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: restheart
        labels: restheart,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true

  mongodb:
    image: mongo:3.4
    volumes:
      - mongodb_data:/data/db
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: restheart
        labels: restheart,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true
    ### As the mongo container starts unauthenticated, for security reasons comment out the below ports
    ### so that mongodb can be accessed from restheart only
    #ports:
    #   - "27017:27017"

  mongo-express:
    image: mongo-express
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.tool == true
    environment:
      ME_CONFIG_SITE_BASEURL: /mongo-express/
      ME_CONFIG_MONGODB_SERVER: mongodb


  # SHARED SLAVES
  jenkins-slave-shared-1:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "Shared slave, can be used for common tasks in all pipelines", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "shared-slave-1", "-labels", "shared shared-1 ldap java8 docker", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_shared_1_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-shared-1
        labels: jenkins-slave,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true
  jenkins-slave-shared-2:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "Shared slave, can be used for common tasks in all pipelines", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "shared-slave-2", "-labels", "shared shared-2 ldap java8 docker", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_shared_2_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-shared-2
        labels: jenkins-slave,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true
  jenkins-slave-shared-3:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "Shared slave, can be used for common tasks in all pipelines", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "shared-slave-3", "-labels", "shared shared-3 ldap java8 docker", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_shared_3_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-shared-3
        labels: jenkins-slave,tool
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true

  #  TEAM JENKINS SLAVES
  jenkins-slave-bss-clarify:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "slave-bss-clarify", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "slave-bss-clarify", "-labels", "bss-clarify clarify bss-clarify-1 clarify-1", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_bss_clarify_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-bss-clarify
        labels: jenkins-slave,bss,clarify
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true

  jenkins-slave-bss-kenan:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "slave-bss-kenan", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "slave-bss-kenan", "-labels", "bss-kenan kenan bss-kenan-1 kenan-1", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_bss_kenan_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-bss-kenan
        labels: jenkins-slave,bss,kenan
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true

  jenkins-slave-oss-asap:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "slave-oss-asap", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "slave-oss-asap", "-labels", "oss-asap asap oss-asap-1 asap-1", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_oss_asap_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-oss-asap
        labels: jenkins-slave,oss,asap
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true

  jenkins-slave-oss-cdm:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "slave-oss-cdm", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "slave-oss-cdm", "-labels", "oss-cdm cdm oss-cdm-1 cdm-1", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_oss_cdm_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-oss-cdm
        labels: jenkins-slave,oss,cdm
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true

  jenkins-slave-online-aem-1:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "slave-online-aem-1", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "slave-online-aem-1", "-labels", "online-aem aem online-aem-1 aem-1", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_online_aem_1_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-online-aem-1
        labels: jenkins-slave,online,aem
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true

  jenkins-slave-online-aem-2:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "slave-online-aem-2", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "slave-online-aem-2", "-labels", "online-aem aem online-aem-2 aem-2", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_online_aem_2_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-online-aem-2
        labels: jenkins-slave,online,aem
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true

  jenkins-slave-mdw-core-off-1:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "slave-mdw-core-off-1", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "slave-mdw-core-off-1", "-labels", "mdw-core-off core-off mdw-core-off-1 core-off-1", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_mdw_core_off_1_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins_slave_mdw_core_off_libs:/libs
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-mdw-core-off-1
        labels: jenkins-slave,mdw,core-off-1
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true

  jenkins-slave-mdw-core-off-2:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "slave-mdw-core-off-2", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "slave-mdw-core-off-2", "-labels", "mdw-core-off core-off mdw-core-off-2 core-off-2", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_mdw_core_off_2_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins_slave_mdw_core_off_libs:/libs
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-mdw-core-off-2
        labels: jenkins-slave,mdw,core-off-2
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true
  jenkins-slave-obo:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "slave-obo", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "slave-obo", "-labels", "obo obo-1", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_obo_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-obo
        labels: jenkins-slave,obo
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true
  jenkins-slave-security-uxp-1:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "slave-security-uxp-1", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "slave-security-uxp-1", "-labels", "security-uxp-1 uxp-1 security-uxp uxp", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_security_uxp_1_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-security-uxp-1
        labels: jenkins-slave,security,uxp
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true
  jenkins-slave-online-aem-b2b-1:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "slave-online-aem-b2b-1", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "slave-online-aem-b2b-1", "-labels", "online-aem-b2b-1 aem-b2b-1 online-aem-b2b aem-b2b", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_online_aem_b2b_1_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-online-aem-b2b-1
        labels: jenkins-slave,online,aem-b2b
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true
  jenkins-slave-mdw-peal-1:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "slave-mdw-peal-1", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "slave-mdw-peal-1", "-labels", "mdw-peal peal mdw-peal-1 peal-1", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_mdw_peal_1_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-mdw-peal-1
        labels: jenkins-slave,mdw,peal,peal-1
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true

  jenkins-slave-mdw-peal-2:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "slave-mdw-peal-2", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "slave-mdw-peal-2", "-labels", "mdw-peal peal mdw-peal-2 peal-2", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_mdw_peal_2_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-mdw-peal-2
        labels: jenkins-slave,mdw,peal,peal-2
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true
  jenkins-slave-mdw-off-projects:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "slave-mdw-off-projects", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "slave-mdw-off-projects", "-labels", "mdw-off-projects off-projects mdw-off-projects-1 off-projects-1", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_mdw_off_projects_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-mdw-off-projects
        labels: jenkins-slave,mdw,off-projects
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true
  jenkins-slave-online-testautomation:
    image: svscorp/adop-jenkins-slave:jdk-8
    #image: accenture/adop-jenkins-slave:latest
    command: ["java", "-Dhttp.proxyHost=${HTTP_PROXY_HOST}", "-Dhttp.proxyPort=${HTTP_PROXY_PORT}", "-Dhttps.proxyHost=${HTTPS_PROXY_HOST}", "-Dhttps.proxyPort=${HTTPS_PROXY_PORT}", "-Dhttp.nonProxyHosts=${HTTP_NON_PROXY_HOSTS_JOIN_PIPE}", "-jar", "/bin/swarm-client.jar", "-executors", "${SLAVE_EXECUTORS}", "-description",
    "slave-online-test-automation", "-master", "http://jenkins:8080/jenkins/", "-username", "${LDAP_INTERNAL_USER}", "-password", "${LDAP_INTERNAL_PASSWORD}",
    "-name", "slave-online-testautomation", "-labels", "online-testautomation testautomation online-testautomation-1 testautomation-1", "-mode", "exclusive"]
    depends_on:
      - "elasticsearch"
      - "logstash"
      - "kibana"
    environment:
      HTTP_PROXY_HOST:
      HTTP_PROXY_PORT:
      HTTPS_PROXY_HOST:
      HTTPS_PROXY_PORT:
      HTTP_NON_PROXY_HOSTS_JOIN_PIPE:
      http_proxy:
      https_proxy:
      no_proxy:
    volumes:
      - jenkins_slave_online_testautomation_home:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - private
    extra_hosts:
      - "${TARGET_HOST} registry-${TARGET_HOST} selenium-${TARGET_HOST} logstash-${TARGET_HOST}:${FRONTEND_1_PRIVATE_IP}"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${LOGSTASH_HOST}:12201"
        tag: jenkins-slave-online-testautomation
        labels: jenkins-slave,online,testautomation
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.labels.jenkins-slave == true
