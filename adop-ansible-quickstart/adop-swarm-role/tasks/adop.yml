- name: Downloading ADOP
  git:
    repo: "{{ adop_repo_url }}"
    dest: /adop
    version: "{{ adop_repo_revision }}"
    force: yes # download new each time because we replace some files via templates

# - name: Making sure platform-secrets doesn't exist
#   file:
#     path: /adop/platform.secrets.sh
#     state: absent
#   ignore_errors: true
#   tags:
#     - replace-files-and-init

- name: Setup adop environment variables
  template:
    src: env.config.sh.j2
    dest: /adop/env.config.sh
  tags:
    - replace-files-and-init
    - update-platform

- name: Source all container volume names into a variable
  include_vars:
    file: files/volumes.yml
    name: volumes
  tags:
    - replace-files-and-init

- name: Precreate NFS folders for each container
  file:
    path: "{{ nfs_mount_folder }}/{{ platform_name }}_{{ item }}"
    state: directory
  with_items:
    - "{{ volumes.volumes }}"
  tags:
    - replace-files-and-init

- name: Create volumes for preinit adop configuration
  command: "docker volume create --driver local --opt type=nfs --opt o=addr={{ nfs_host }},rw --opt device=:{{ nfs_folder }}/{{ item }} --name={{ item}}"
  with_items:
    - "{{ nginx_ssl_volume }}"
    - "{{ registry_ssl_volume }}" # this one will be created anyway, but we need to copy certificates before launching adop init
    - "{{ jenkins_volume }}"
    - "{{ restheart_config_volume }}"

# - name: Precreate SSL sertificate folder in GitLab
#   file:
#     path: "{{ nfs_mount_folder }}/{{ platform_name }}_gitlab_config/ssl"
#     state: directory
#   tags:
#     - replace-files-and-init

- name: Precreate SSL sertificate folder in Registry
  file:
    path: "{{ nfs_mount_folder }}/{{ registry_ssl_volume }}/registry"
    state: directory
  tags:
    - replace-files-and-init

- name: Add SSL certificates
  copy:
    src: "lgi/nginx_certificates/{{ item.file }}"
    dest: "{{ nfs_mount_folder }}/{{ item.vol_path }}/{{ item.target_name }}"
    mode: 0600
  with_items:
    - { vol_path: "{{ nginx_ssl_volume }}", file: host.crt, target_name: host.crt }
    - { vol_path: "{{ nginx_ssl_volume }}", file: host.key, target_name: host.key }
    - { vol_path: "{{ nginx_ssl_volume }}", file: selenium-host.crt, target_name: selenium-host.crt }
    - { vol_path: "{{ nginx_ssl_volume }}", file: selenium-host.key, target_name: selenium-host.key }
    - { vol_path: "{{ nginx_ssl_volume }}", file: fullchain.pem, target_name: registry_fullchain.pem }
    - { vol_path: "{{ nginx_ssl_volume }}", file: privkey.pem, target_name: registry_privkey.pem }
    - { vol_path: "{{ registry_ssl_volume }}/registry", file: fullchain.pem, target_name: fullchain.pem }
    - { vol_path: "{{ registry_ssl_volume }}/registry", file: privkey.pem, target_name: privkey.pem }
    # - { vol_path: "{{ platform_name }}_gitlab_config/ssl", file: host.crt, target_name: "{{ public_domain }}.crt" }
    # - { vol_path: "{{ platform_name }}_gitlab_config/ssl", file: host.key, target_name: "{{ public_domain }}.key" }

- name: Create groovy directory to put proxy config
  file:
    path: "{{ nfs_mount_folder }}/{{ jenkins_volume }}/init.groovy.d"
    state: directory
    mode: 0755

- name: Replacing swarm-compose and swarm volume definitions (team slaves)
  copy:
    src: "lgi/adop-docker-compose/{{ item.file }}"
    dest: "{{ item.vol_path }}/{{ item.file }}"
  tags:
    - replace-files-and-init
    - update-platform
  with_items:
    - { vol_path: "/adop", file: swarm-compose.yml }
    - { vol_path: "/adop", file: credentials.generate.sh }
    - { vol_path: "/adop", file: platform.secrets.sh.example }
    - { vol_path: "/adop/etc/volumes/nfs", file: swarm.yml }
    - { vol_path: "/adop/cmd", file: swarm }

- name: Add sonar properties and wrapper
  template:
    src: "lgi/sonar/{{ item.file }}.j2"
    dest: "{{ nfs_mount_folder }}/{{ item.vol_path }}/{{ item.file }}"
  tags:
    - replace-files-and-init
  with_items:
    - { vol_path: "{{ platform_name }}_sonar_conf", file: sonar.properties }
    - { vol_path: "{{ platform_name }}_sonar_conf", file: wrapper.conf }

- name: Add Jenkins proxy file and theme to jenkins_home
  template:
    src: "lgi/jenkins/{{ item.file }}.j2"
    dest: "{{ nfs_mount_folder }}/{{ item.vol_path }}/{{ item.file }}"
  with_items:
    - { vol_path: "{{ platform_name }}_jenkins_home", file: org.codefirst.SimpleThemeDecorator.xml }
    - { vol_path: "{{ platform_name }}_jenkins_home", file: proxy.xml }
    - { vol_path: "{{ platform_name }}_jenkins_home", file: .gitconfig }

- name: Add MongoDB API (RESTHeart) security and config data
  template:
    src: "lgi/restheart/{{ item.file }}.j2"
    dest: "{{ nfs_mount_folder }}/{{ item.vol_path }}/{{ item.file }}"
  tags:
    - replace-files-and-init
  with_items:
    - { vol_path: "{{ platform_name }}_restheart_config", file: security.yml }
    - { vol_path: "{{ platform_name }}_restheart_config", file: restheart.yml }

- name: Add jenkins proxy
  template:
    src: "lgi/jenkins/jenkins_proxy.groovy.j2"
    dest: "{{ nfs_mount_folder }}/{{ jenkins_volume }}/init.groovy.d/aaa_jenkins_proxy.groovy"
    mode: 0644

- name: Initializing ADOP Platform
  register: adop_init
  tags:
    - replace-files-and-init
    - update-platform
  expect:
    command: ./adop swarm init
    chdir: /adop
    timeout: 3000
    responses:
      (?i)username: "lgadop"

- debug: var=adop_init.stdout_lines
