---

- name: remove stack
  shell: "docker stack rm {{ platform_name }}"
  ignore_errors: yes
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: Pause for 15 seconds
  pause:
    seconds: 15

- name: remove network
  shell: "docker network rm {{ platform_name }}"
  ignore_errors: yes
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: Source all container volume names into a variable
  include_vars:
    file: files/volumes.yml
    name: volumes
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: Empty physical volumes
  file:
    path: "{{ nfs_mount_folder }}/{{ platform_name }}_{{ item }}/"
    state: absent
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"
  ignore_errors: yes
  with_items:
    - "{{ volumes.volumes }}"

- name: remove stopped containers
  shell: "docker rm $(docker ps -a -q)"
  ignore_errors: yes

- name: remove volumes
  ignore_errors: yes
  shell: docker volume rm $(docker volume ls -f dangling=true -q)

- name: remove images
  ignore_errors: yes
  shell: docker rmi $(docker images -f dangling=true -q)

- name: Leave swarm
  command: docker swarm leave --force
  ignore_errors: yes


- name: clean journalctl
  command: journalctl --vacuum-time=1d
  ignore_errors: yes

- name: clean messages
  command: rm -rf /var/log/messages-*
  ignore_errors: yes

- name: Restart Docker
  ignore_errors: yes
  service:
    name: docker
    state: restarted

- name: Delete docker-ce
  ignore_errors: yes
  yum:
    name: docker-ce
    state: absent

- name: Empty docker storage folder and daemon.json
  shell: rm -rf {{ item }}
  ignore_errors: yes
  with_items:
    - "/u01/appl/docker/*"
    - "/var/lib/docker/*"
    - "/etc/docker/daemon.json"

- name: Flush systemd changes
  command: systemctl daemon-reload
